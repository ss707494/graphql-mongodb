{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","common/utils.js","views/Note/List/index.js","component/EditDialog/index.js","component/SearchForm/index.js","component/BasicTable/style.js","component/BasicTable/index.js","gql/book.graphql","gql/note.graphql"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","DictList","p","_queryGraphql","queryGraphql","allBook","_queryGraphql2","slicedToArray","getAllBook","allBookList","React","useEffect","editType","name","type","options","map","e","id","multiline","rows","columns","path","formatData","data","format","Date","BasicTable","queryListGql","allNote","deleteGql","deleteOneNote","updateGql","updateNote","dataListName","dealEditData","obj","prop","_toPropertyKey","omit","formColumn","EditDialog","_ref","_ref$typeName","typeName","updateSchema","refetch","showEdit","setEditData","editData","setShowEdit","_ref$dealEditData","setEdit","objectSpread","_mutationGraphql","mutationGraphql","_mutationGraphql2","update","loading","react_default","a","createElement","Dialog_default","open","onClose","DialogTitle_default","DialogContent_default","item","FormControl_default","fullWidth","concat","getFormItem","DialogActions_default","Button_default","onClick","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","defineProperty","stop","this","option","_option$options","Fragment","InputLabel_default","shrink","Select_default","value","onChange","_ref3","_ref4","text","MenuItem_default","material_ui_pickers_esm","utils","DateFnsUtils","label","TextField_default","SearchForm","setFormData","formData","_ref2","S","TableSection","styled","Paper","_templateObject","_useCustomContext","useCustomContext","con","getData","_queryGraphql2$1$opti","dataList","deleteOne","searchFormState","_useState","useState","_useState2","initSearchFormState","editDialogState","_useState3","_useState4","editClick","initState","Button","variant","SearchForm_SearchForm","assign","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","_ref2$formatData","get","showConfirm","message","callBack","_callBack","res","abrupt","_x","apply","arguments","EditDialog_EditDialog","doc","kind","definitions","typeCondition","directives","selectionSet","selections","operation","variableDefinitions","variable","loc","start","end","body","locationOffset","line","column","definitionRefs","findOperation","element","oneQuery","operationName","newDoc","hasOwnProperty","opRefs","Set","allRefs","newRefs","forEach","refName","add","size","prevRefs","has","childRef","op","push","def","refs","collectFragmentReferences","node","selection","module","exports","names","__webpack_require__","filter"],"mappings":"uJACe,SAAAA,EAAAC,EAAAC,GACf,SAAAD,EAAA,SACA,IACAE,EAAAC,EADAC,ECHe,SAAAJ,EAAAC,GACf,SAAAD,EAAA,SACA,IAEAE,EAAAC,EAFAC,EAAA,GACAC,EAAAC,OAAAC,KAAAP,GAGA,IAAAG,EAAA,EAAaA,EAAAE,EAAAG,OAAuBL,IACpCD,EAAAG,EAAAF,GACAF,EAAAQ,QAAAP,IAAA,IACAE,EAAAF,GAAAF,EAAAE,IAGA,OAAAE,EDTeM,CAA4BV,EAAAC,GAG3C,GAAAK,OAAAK,sBAAA,CACA,IAAAC,EAAAN,OAAAK,sBAAAX,GAEA,IAAAG,EAAA,EAAeA,EAAAS,EAAAJ,OAA6BL,IAC5CD,EAAAU,EAAAT,GACAF,EAAAQ,QAAAP,IAAA,GACAI,OAAAO,UAAAC,qBAAAC,KAAAf,EAAAE,KACAE,EAAAF,GAAAF,EAAAE,IAIA,OAAAE,mVEhBO,6DCSA,IAAMY,EAAW,SAAAC,GAAK,IAAAC,EACOC,YAAaC,WADpBC,EAAAf,OAAAgB,EAAA,EAAAhB,CAAAY,EAAA,GACpBK,EADoBF,EAAA,GACRG,EADQH,EAAA,GAE3BI,IAAMC,UAAU,WACdH,KACC,IACH,IACMI,EAAW,CAAC,CAChBC,KAAM,QACL,CACDA,KAAM,SACL,CACDA,KAAM,QACL,CACDA,KAAM,QACL,CACDA,KAAM,SACNC,KAAM,SACNC,QAZeN,EAAYJ,QAAeI,EAAYJ,QAAQW,IAAI,SAAAC,GAAC,MAAK,CAACA,EAAEC,GAAID,EAAEJ,QAA5C,IAapC,CACDA,KAAM,UACNM,WAAW,EACXC,KAAM,GACL,CACDP,KAAM,YAEFQ,EAAU,CAAC,CACfR,KAAM,QACL,CACDA,KAAM,SACL,CACDA,KAAM,QACL,CACDA,KAAM,QACL,CACDA,KAAM,WACNS,KAAM,aACL,CACDT,KAAM,MACL,CACDA,KAAM,WACL,CACDA,KAAM,aACNU,WAAY,SAAAC,GAAI,OAAIC,YAAO,IAAIC,KAAKF,GAAO,uBAK7C,OAAOG,YAAW,CAChBC,aAAcC,UACdC,UAAWC,gBACXC,UAAWC,aACXC,aAAc,UACdtB,WACAS,UACAc,aAAc,SAAAX,GAAI,OD/DF,SAACY,EAAKC,GACQD,EAAxBC,GACR,OAFiCrD,EACDoD,EADC,CACzBC,GADyBrB,IAAAsB,IC+DTC,CAAKf,EAAM,SACjCgB,WAXiB,CAAC,CAChB,WAEGb,CASJzB,IAGUD,4bCzCFwC,EAAa,SAAAC,GAShB,IAAAC,EAAAD,EAPJE,gBAOI,IAAAD,EAPO,OAOPA,EANJE,EAMIH,EANJG,aACAjC,EAKI8B,EALJ9B,SACAkC,EAIIJ,EAJJI,QACAC,EAGIL,EAHJK,SAAUC,EAGNN,EAHMM,YACVC,EAEIP,EAFJO,SAAUC,EAENR,EAFMQ,YAENC,EAAAT,EADJP,oBACI,IAAAgB,EADW,SAAA3B,GAAI,OAAIA,GACnB2B,EACFC,EAAU,SAAC5B,GAAD,OAAUwB,EAAYzD,OAAA8D,EAAA,EAAA9D,CAAA,GAAK0D,EAAazB,KADhD8B,EAEoBC,YAAgBV,GAFpCW,EAAAjE,OAAAgB,EAAA,EAAAhB,CAAA+D,EAAA,GAEDG,EAFCD,EAAA,GAESE,EAFTF,EAAA,GAIR,OACIG,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQG,KAAMhB,EACNiB,QAAS,kBAAMd,GAAY,KAEjCS,EAAAC,EAAAC,cAACI,EAAAL,EAAD,aACAD,EAAAC,EAAAC,cAACK,EAAAN,EAAD,KACED,EAAAC,EAAAC,cAAA,YAEIjD,EAASI,IAAI,SAAAmD,GAAQ,IACXtD,EAASsD,EAATtD,KACR,OACI8C,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAaS,WAAS,EACTlF,IAAG,OAAAmF,OAASzD,IAErB0D,EAAYhF,OAAA8D,EAAA,EAAA9D,CAAA,GACP4E,EADM,CAETlB,WACAG,UACAJ,sBASlBW,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,KACED,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAQc,QAAOnF,OAAAoF,EAAA,EAAApF,CAAAqF,EAAAhB,EAAAiB,KAAE,SAAAC,IAAA,OAAAF,EAAAhB,EAAAmB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACTzB,EAAOlE,OAAA4F,EAAA,EAAA5F,CAAA,GACVqD,EAAWT,EAAac,KAFZ,OAIfC,GAAY,GACZJ,IALe,wBAAAkC,EAAAI,SAAAN,EAAAO,UAOf3B,EAAU,UAAY,QACxBC,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAQc,QAAS,kBAAMxB,GAAY,KAAnC,aAOJqB,EAAc,SAACe,GAAW,IACtBzE,EAAgDyE,EAAhDzE,KAAMC,EAA0CwE,EAA1CxE,KAAMmC,EAAoCqC,EAApCrC,SAAUG,EAA0BkC,EAA1BlC,QADAmC,EAC0BD,EAAjBvE,eADT,IAAAwE,EACmB,GADnBA,EAG9B,MAAa,WAATzE,EACK6C,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4B,SAAA,KACL7B,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAY8B,OAAQzC,EAASpC,IAAQA,GACrC8C,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,CACIgC,MAAO3C,EAASpC,GAChBgF,SAAU,SAAA5E,GAAC,OAAImC,EAAQ7D,OAAA4F,EAAA,EAAA5F,CAAA,GACpBsB,EAAOI,EAAE5B,OAAOuG,UAInB7E,EAAQC,IAAI,SAAA8E,GAAA,IAAAC,EAAAxG,OAAAgB,EAAA,EAAAhB,CAAAuG,EAAA,GAAEF,EAAFG,EAAA,GAASC,EAATD,EAAA,UAAmBpC,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAUzE,IAAKyG,EACLA,MAAOA,GAAQI,OAKnD,eAATlF,EACK6C,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAyBC,MAAOC,KACrCzC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CACIG,MAAOxF,EACP+E,MAAO3C,EAASpC,GAChBgF,SAAU,SAAA5E,GACR,OAAOmC,EAAQ7D,OAAA4F,EAAA,EAAA5F,CAAA,GACZsB,EAAOI,QAMb0C,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,CACHyC,MAAOxF,EACP+E,MAAO3C,EAASpC,IAAS,GACzBM,UAAWmE,EAAOnE,UAClBC,KAAMkE,EAAOlE,KACbyE,SAAU,SAAA5E,GAAC,OAAImC,EAAQ7D,OAAA4F,EAAA,EAAA5F,CAAA,GACpBsB,EAAOI,EAAE5B,OAAOuG,YCpGZW,EAAa,SAAA7D,GAKhB,IAHJ8D,EAGI9D,EAHJ8D,YACAC,EAEI/D,EAFJ+D,SACAjE,EACIE,EADJF,WAEJ,OACImB,EAAAC,EAAAC,cAAA,YAEIrB,EAAWxB,IAAI,SAAAmD,GAAQ,IACdtD,EADctB,OAAAgB,EAAA,EAAAhB,CACN4E,EADM,MAErB,OACIR,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAazE,IAAG,aAAAmF,OAAezD,IAE3B0D,EAAYhF,OAAA8D,EAAA,EAAA9D,CAAA,GACP4E,EADM,CAETsC,WACAD,sBAWhBjC,EAAc,SAACe,GAAW,IACtBzE,EAAgDyE,EAAhDzE,KAAMC,EAA0CwE,EAA1CxE,KAAM2F,EAAoCnB,EAApCmB,SAAUrD,EAA0BkC,EAA1BlC,QADAmC,EAC0BD,EAAjBvE,eADT,IAAAwE,EACmB,GADnBA,EAG9B,MAAa,WAATzE,EACK6C,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4B,SAAA,KACL7B,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAY8B,OAAQe,EAAS5F,IAAQA,GACrC8C,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,CACIgC,MAAOa,EAAS5F,GAChBgF,SAAU,SAAA5E,GAAC,OAAImC,EAAQ7D,OAAA4F,EAAA,EAAA5F,CAAA,GACpBsB,EAAOI,EAAE5B,OAAOuG,UAInB7E,EAAQC,IAAI,SAAA0F,GAAA,IAAAZ,EAAAvG,OAAAgB,EAAA,EAAAhB,CAAAmH,EAAA,GAAEd,EAAFE,EAAA,GAASE,EAATF,EAAA,UAAmBnC,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAUzE,IAAKyG,EACLA,MAAOA,GAAQI,OAKnD,eAATlF,EACK6C,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAyBC,MAAOC,KACrCzC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CACIG,MAAOxF,EACP+E,MAAOa,EAAS5F,GAChBgF,SAAU,SAAA5E,GACR,OAAOmC,EAAQ7D,OAAA4F,EAAA,EAAA5F,CAAA,GACZsB,EAAOI,QAMb0C,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,CACHyC,MAAOxF,EACP+E,MAAOa,EAAS5F,IAAS,GACzBM,UAAWmE,EAAOnE,UAClBC,KAAMkE,EAAOlE,KACbyE,SAAU,SAAA5E,GAAC,OAAImC,EAAQ7D,OAAA4F,EAAA,EAAA5F,CAAA,GACpBsB,EAAOI,EAAE5B,OAAOuG,2ICrFlB,IAAMe,GAAI,GAEjBA,GAAEC,aAAeC,YAAOC,KAAPD,CAAjBE,uCCSO,IAAMpF,GAAa,SAAC2D,GAAD,OAAY,SAAApF,GAAK,IAAA8G,EAC3BC,cAAPC,EADkC3H,OAAAgB,EAAA,EAAAhB,CAAAyH,EAAA,MAAA7G,EAEmBC,YAAakF,EAAO1D,cAFvCtB,EAAAf,OAAAgB,EAAA,EAAAhB,CAAAY,EAAA,GAElCgH,EAFkC7G,EAAA,GAAA8G,EAAA9G,EAAA,GAEtBgF,EAAOpD,cAAemF,OAFA,IAAAD,EAEW,GAFXA,EAAA9D,EAGrBC,YAAgB+B,EAAOxD,WAApCwF,EAHkC/H,OAAAgB,EAAA,EAAAhB,CAAA+D,EAAA,MAInCiE,EFHiB,WAAM,IAAAC,EACGC,mBAAS,IADZC,EAAAnI,OAAAgB,EAAA,EAAAhB,CAAAiI,EAAA,GACtBf,EADsBiB,EAAA,GAE7B,MAAO,CACLlB,YAH2BkB,EAAA,GAGdjB,YEASkB,GACxBhH,oBAAU,WACRwG,EAAQI,EAAgBd,WACvB,IACH,IAAMmB,EHPiB,WAAM,IAAAJ,EACGC,oBAAS,GADZC,EAAAnI,OAAAgB,EAAA,EAAAhB,CAAAiI,EAAA,GACtBzE,EADsB2E,EAAA,GACZxE,EADYwE,EAAA,GAAAG,EAEGJ,mBAAS,IAFZK,EAAAvI,OAAAgB,EAAA,EAAAhB,CAAAsI,EAAA,GAEtB5E,EAFsB6E,EAAA,GAEZ9E,EAFY8E,EAAA,GAO7B,MAAO,CACLC,UALgB,SAAC5D,GAAD,OAAU,WAC1BnB,EAAYmB,GACZjB,GAAY,KAIZH,WAAUC,cAAaC,WAAUC,eGFX8E,GAChBD,EAAcH,EAAdG,UACFnH,EAAW0E,EAAO1E,SAClBS,EAAUiE,EAAOjE,QACvB,OAAOsC,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4B,SAAA,KACL7B,EAAAC,EAAAC,cAAC8C,GAAEC,aAAH,KACEjD,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAQC,QAAQ,WACRxD,QAASqD,EAAU,KAD3B,OAIEzC,EAAO9C,YAAcmB,EAAAC,EAAAC,cAACsE,EAAD5I,OAAA6I,OAAA,CACjB5F,WAAY8C,EAAO9C,YACf+E,KAGZ5D,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,KACED,EAAAC,EAAAC,cAACyE,EAAA1E,EAAD,KACED,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,KAEIvC,EAAQL,IAAI,SAAA0B,GAAA,IAAG7B,EAAH6B,EAAG7B,KAAH,OAAc8C,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAWzE,IAAG,YAAAmF,OAAczD,IAASA,KAEjE8C,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,iBAGJD,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,KAEIyD,EAASrG,IAAI,SAACmD,GAAD,OACTR,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAUzE,IAAKgF,EAAKjD,IAEhBG,EAAQL,IAAI,SAAA0F,GAAA,IAAG7F,EAAH6F,EAAG7F,KAAMS,EAAToF,EAASpF,KAAToH,EAAAhC,EAAenF,kBAAf,IAAAmH,EAA4B,SAAAlH,GAAI,OAAIA,GAApCkH,EAAA,OACR/E,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAWzE,IAAG,YAAAmF,OAAczD,IAASU,EAAWoH,IAAIxE,EAAO7C,GAAcT,OAE/E8C,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,KACED,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAQC,QAAQ,WACRxD,QAASqD,EAAU5D,IAD3B,QAGAR,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAQC,QAAQ,WACRxD,QAAS,WACPwC,EAAI0B,YAAY,CACdC,QAAS,eACTC,SAAQ,eAAAC,EAAAxJ,OAAAoF,EAAA,EAAApF,CAAAqF,EAAAhB,EAAAiB,KAAE,SAAAC,EAAMkE,GAAN,OAAApE,EAAAhB,EAAAmB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACH8D,EADG,CAAAhE,EAAAE,KAAA,eAAAF,EAAAiE,OAAA,wBAAAjE,EAAAE,KAAA,EAEFoC,EAAU,CACdpG,GAAIiD,EAAKjD,KAHH,OAKRiG,IALQ,wBAAAnC,EAAAI,SAAAN,EAAAO,SAAF,gBAAA6D,GAAA,OAAAH,EAAAI,MAAA9D,KAAA+D,YAAA,OAJpB,cAqBhBzF,EAAAC,EAAAC,cAACwF,EAAD9J,OAAA6I,OAAA,CAAYtF,QAASqE,EACTvG,SAAUA,EACViC,aAAcyC,EAAOtD,UACrBG,aAAcmD,EAAOnD,cACjByF,0BCnFpB,IAAA0B,EAAA,CAAeC,KAAA,WAAAC,YAAA,EAAkCD,KAAA,qBAAA1I,KAAA,CAAoC0I,KAAA,OAAA3D,MAAA,SAA8B6D,cAAA,CAAkBF,KAAA,YAAA1I,KAAA,CAA2B0I,KAAA,OAAA3D,MAAA,SAA8B8D,WAAA,GAAAC,aAAA,CAAiCJ,KAAA,eAAAK,WAAA,EAAqCL,KAAA,QAAA1I,KAAA,CAAuB0I,KAAA,OAAA3D,MAAA,MAA2BwD,UAAA,GAAAM,WAAA,IAAgC,CAAEH,KAAA,QAAA1I,KAAA,CAAuB0I,KAAA,OAAA3D,MAAA,QAA6BwD,UAAA,GAAAM,WAAA,IAAgC,CAAEH,KAAA,QAAA1I,KAAA,CAAuB0I,KAAA,OAAA3D,MAAA,cAAmCwD,UAAA,GAAAM,WAAA,IAAgC,CAAEH,KAAA,QAAA1I,KAAA,CAAuB0I,KAAA,OAAA3D,MAAA,cAAmCwD,UAAA,GAAAM,WAAA,IAAgC,CAAEH,KAAA,QAAA1I,KAAA,CAAuB0I,KAAA,OAAA3D,MAAA,WAAgCwD,UAAA,GAAAM,WAAA,OAAmC,CAAEH,KAAA,sBAAAM,UAAA,WAAAhJ,KAAA,CAA4D0I,KAAA,OAAA3D,MAAA,cAAmCkE,oBAAA,EAAyBP,KAAA,qBAAAQ,SAAA,CAAwCR,KAAA,WAAA1I,KAAA,CAA0B0I,KAAA,OAAA3D,MAAA,SAA8B9E,KAAA,CAASyI,KAAA,cAAAzI,KAAA,CAA6ByI,KAAA,YAAA1I,KAAA,CAA2B0I,KAAA,OAAA3D,MAAA,eAAoC8D,WAAA,KAAiBA,WAAA,GAAAC,aAAA,CAAkCJ,KAAA,eAAAK,WAAA,EAAqCL,KAAA,QAAA1I,KAAA,CAAuB0I,KAAA,OAAA3D,MAAA,cAAmCwD,UAAA,EAAeG,KAAA,WAAA1I,KAAA,CAA0B0I,KAAA,OAAA3D,MAAA,QAA6BA,MAAA,CAAU2D,KAAA,WAAA1I,KAAA,CAA0B0I,KAAA,OAAA3D,MAAA,WAA+B8D,WAAA,GAAAC,aAAA,CAAkCJ,KAAA,eAAAK,WAAA,EAAqCL,KAAA,iBAAA1I,KAAA,CAAgC0I,KAAA,OAAA3D,MAAA,SAA8B8D,WAAA,UAAuB,CAAEH,KAAA,sBAAAM,UAAA,WAAAhJ,KAAA,CAA4D0I,KAAA,OAAA3D,MAAA,iBAAsCkE,oBAAA,EAAyBP,KAAA,qBAAAQ,SAAA,CAAwCR,KAAA,WAAA1I,KAAA,CAA0B0I,KAAA,OAAA3D,MAAA,OAA4B9E,KAAA,CAASyI,KAAA,cAAAzI,KAAA,CAA6ByI,KAAA,YAAA1I,KAAA,CAA2B0I,KAAA,OAAA3D,MAAA,YAAiC8D,WAAA,KAAiBA,WAAA,GAAAC,aAAA,CAAkCJ,KAAA,eAAAK,WAAA,EAAqCL,KAAA,QAAA1I,KAAA,CAAuB0I,KAAA,OAAA3D,MAAA,iBAAsCwD,UAAA,EAAeG,KAAA,WAAA1I,KAAA,CAA0B0I,KAAA,OAAA3D,MAAA,MAA2BA,MAAA,CAAU2D,KAAA,WAAA1I,KAAA,CAA0B0I,KAAA,OAAA3D,MAAA,SAA6B8D,WAAA,OAAqB,CAAEH,KAAA,sBAAAM,UAAA,QAAAhJ,KAAA,CAAyD0I,KAAA,OAAA3D,MAAA,WAAgCkE,oBAAA,EAAyBP,KAAA,qBAAAQ,SAAA,CAAwCR,KAAA,WAAA1I,KAAA,CAA0B0I,KAAA,OAAA3D,MAAA,OAA4B9E,KAAA,CAASyI,KAAA,cAAAzI,KAAA,CAA6ByI,KAAA,YAAA1I,KAAA,CAA2B0I,KAAA,OAAA3D,MAAA,YAAiC8D,WAAA,KAAiBA,WAAA,GAAAC,aAAA,CAAkCJ,KAAA,eAAAK,WAAA,EAAqCL,KAAA,QAAA1I,KAAA,CAAuB0I,KAAA,OAAA3D,MAAA,WAAgCwD,UAAA,EAAeG,KAAA,WAAA1I,KAAA,CAA0B0I,KAAA,OAAA3D,MAAA,MAA2BA,MAAA,CAAU2D,KAAA,WAAA1I,KAAA,CAA0B0I,KAAA,OAAA3D,MAAA,SAA6B8D,WAAA,GAAAC,aAAA,CAAkCJ,KAAA,eAAAK,WAAA,EAAqCL,KAAA,iBAAA1I,KAAA,CAAgC0I,KAAA,OAAA3D,MAAA,SAA8B8D,WAAA,UAAuB,CAAEH,KAAA,sBAAAM,UAAA,QAAAhJ,KAAA,CAAyD0I,KAAA,OAAA3D,MAAA,WAAgCkE,oBAAA,GAAAJ,WAAA,GAAAC,aAAA,CAA0DJ,KAAA,eAAAK,WAAA,EAAqCL,KAAA,QAAA1I,KAAA,CAAuB0I,KAAA,OAAA3D,MAAA,WAAgCwD,UAAA,GAAAM,WAAA,GAAAC,aAAA,CAAgDJ,KAAA,eAAAK,WAAA,EAAqCL,KAAA,iBAAA1I,KAAA,CAAgC0I,KAAA,OAAA3D,MAAA,SAA8B8D,WAAA,WAAuBM,IAAA,CAASC,MAAA,EAAAC,IAAA,MAC1qGZ,EAAAU,IAAA/K,OAAA,CAAsBkL,KAAA,meAAgetJ,KAAA,kBAAAuJ,eAAA,CAAqDC,KAAA,EAAAC,OAAA,IAkD3iB,IAAAC,EAAA,GAWA,SAAAC,EAAAlB,EAAAzI,GACA,QAAAzB,EAAA,EAAqBA,EAAAkK,EAAAE,YAAA/J,OAA4BL,IAAA,CACjD,IAAAqL,EAAAnB,EAAAE,YAAApK,GACA,GAAAqL,EAAA5J,MAAA4J,EAAA5J,KAAA+E,OAAA/E,EACA,OAAA4J,GAKA,SAAAC,EAAApB,EAAAqB,GAEA,IAAAC,EAAA,CACArB,KAAAD,EAAAC,KACAC,YAAA,CAAAgB,EAAAlB,EAAAqB,KAEArB,EAAAuB,eAAA,SACAD,EAAAZ,IAAAV,EAAAU,KAKA,IAAAc,EAAAP,EAAAI,IAAA,IAAAI,IACAC,EAAA,IAAAD,IACAE,EAAA,IAAAF,IAOA,IAJAD,EAAAI,QAAA,SAAAC,GACAF,EAAAG,IAAAD,KAGAF,EAAAI,KAAA,IACA,IAAAC,EAAAL,EACAA,EAAA,IAAAF,IAEAO,EAAAJ,QAAA,SAAAC,GACAH,EAAAO,IAAAJ,KACAH,EAAAI,IAAAD,IACAZ,EAAAY,IAAA,IAAAJ,KACAG,QAAA,SAAAM,GACAP,EAAAG,IAAAI,QAaA,OAPAR,EAAAE,QAAA,SAAAC,GACA,IAAAM,EAAAjB,EAAAlB,EAAA6B,GACAM,GACAb,EAAApB,YAAAkC,KAAAD,KAIAb,EA7DAtB,EAAAE,YAAA0B,QAAA,SAAAS,GACA,GAAAA,EAAA9K,KAAA,CACA,IAAA+K,EAAA,IAAAb,KAjCA,SAAAc,EAAAC,EAAAF,GACA,sBAAAE,EAAAvC,KACAqC,EAAAR,IAAAU,EAAAjL,KAAA+E,YACO,0BAAAkG,EAAAvC,KAAA,CACP,IAAAzI,EAAAgL,EAAAhL,KACA,cAAAA,EAAAyI,MACAqC,EAAAR,IAAAtK,EAAAD,KAAA+E,OAIAkG,EAAAnC,cACAmC,EAAAnC,aAAAC,WAAAsB,QAAA,SAAAa,GACAF,EAAAE,EAAAH,KAIAE,EAAAhC,qBACAgC,EAAAhC,oBAAAoB,QAAA,SAAAS,GACAE,EAAAF,EAAAC,KAIAE,EAAAtC,aACAsC,EAAAtC,YAAA0B,QAAA,SAAAS,GACAE,EAAAF,EAAAC,KAUAC,CAAAF,EAAAC,GACArB,EAAAoB,EAAA9K,KAAA+E,OAAAgG,KA4DAI,EAAAC,QAAA3C,EAEA0C,EAAAC,QAAA,WAAAvB,EAAApB,EAAA,cAEA0C,EAAAC,QAAA,cAAAvB,EAAApB,EAAA,iBAEA0C,EAAAC,QAAA,QAAAvB,EAAApB,EAAA,WAEA0C,EAAAC,QAAA,QAAAvB,EAAApB,EAAA,gCC7HA,IAAAA,EAAA,CAAeC,KAAA,WAAAC,YAAA,EAAkCD,KAAA,qBAAA1I,KAAA,CAAoC0I,KAAA,OAAA3D,MAAA,SAA8B6D,cAAA,CAAkBF,KAAA,YAAA1I,KAAA,CAA2B0I,KAAA,OAAA3D,MAAA,SAA8B8D,WAAA,GAAAC,aAAA,CAAiCJ,KAAA,eAAAK,WAAA,EAAqCL,KAAA,QAAA1I,KAAA,CAAuB0I,KAAA,OAAA3D,MAAA,MAA2BwD,UAAA,GAAAM,WAAA,IAAgC,CAAEH,KAAA,QAAA1I,KAAA,CAAuB0I,KAAA,OAAA3D,MAAA,QAA6BwD,UAAA,GAAAM,WAAA,IAAgC,CAAEH,KAAA,QAAA1I,KAAA,CAAuB0I,KAAA,OAAA3D,MAAA,SAA8BwD,UAAA,GAAAM,WAAA,IAAgC,CAAEH,KAAA,QAAA1I,KAAA,CAAuB0I,KAAA,OAAA3D,MAAA,QAA6BwD,UAAA,GAAAM,WAAA,IAAgC,CAAEH,KAAA,QAAA1I,KAAA,CAAuB0I,KAAA,OAAA3D,MAAA,QAA6BwD,UAAA,GAAAM,WAAA,IAAgC,CAAEH,KAAA,QAAA1I,KAAA,CAAuB0I,KAAA,OAAA3D,MAAA,WAAgCwD,UAAA,GAAAM,WAAA,IAAgC,CAAEH,KAAA,QAAA1I,KAAA,CAAuB0I,KAAA,OAAA3D,MAAA,cAAmCwD,UAAA,GAAAM,WAAA,IAAgC,CAAEH,KAAA,QAAA1I,KAAA,CAAuB0I,KAAA,OAAA3D,MAAA,cAAmCwD,UAAA,GAAAM,WAAA,IAAgC,CAAEH,KAAA,QAAA1I,KAAA,CAAuB0I,KAAA,OAAA3D,MAAA,WAAgCwD,UAAA,GAAAM,WAAA,IAAgC,CAAEH,KAAA,QAAA1I,KAAA,CAAuB0I,KAAA,OAAA3D,MAAA,UAA+BwD,UAAA,GAAAM,WAAA,OAAmC,CAAEH,KAAA,sBAAAM,UAAA,WAAAhJ,KAAA,CAA4D0I,KAAA,OAAA3D,MAAA,cAAmCkE,oBAAA,EAAyBP,KAAA,qBAAAQ,SAAA,CAAwCR,KAAA,WAAA1I,KAAA,CAA0B0I,KAAA,OAAA3D,MAAA,SAA8B9E,KAAA,CAASyI,KAAA,cAAAzI,KAAA,CAA6ByI,KAAA,YAAA1I,KAAA,CAA2B0I,KAAA,OAAA3D,MAAA,eAAoC8D,WAAA,KAAiBA,WAAA,GAAAC,aAAA,CAAkCJ,KAAA,eAAAK,WAAA,EAAqCL,KAAA,QAAA1I,KAAA,CAAuB0I,KAAA,OAAA3D,MAAA,cAAmCwD,UAAA,EAAeG,KAAA,WAAA1I,KAAA,CAA0B0I,KAAA,OAAA3D,MAAA,QAA6BA,MAAA,CAAU2D,KAAA,WAAA1I,KAAA,CAA0B0I,KAAA,OAAA3D,MAAA,WAA+B8D,WAAA,GAAAC,aAAA,CAAkCJ,KAAA,eAAAK,WAAA,EAAqCL,KAAA,iBAAA1I,KAAA,CAAgC0I,KAAA,OAAA3D,MAAA,SAA8B8D,WAAA,UAAuB,CAAEH,KAAA,sBAAAM,UAAA,WAAAhJ,KAAA,CAA4D0I,KAAA,OAAA3D,MAAA,iBAAsCkE,oBAAA,EAAyBP,KAAA,qBAAAQ,SAAA,CAAwCR,KAAA,WAAA1I,KAAA,CAA0B0I,KAAA,OAAA3D,MAAA,OAA4B9E,KAAA,CAASyI,KAAA,cAAAzI,KAAA,CAA6ByI,KAAA,YAAA1I,KAAA,CAA2B0I,KAAA,OAAA3D,MAAA,YAAiC8D,WAAA,KAAiBA,WAAA,GAAAC,aAAA,CAAkCJ,KAAA,eAAAK,WAAA,EAAqCL,KAAA,QAAA1I,KAAA,CAAuB0I,KAAA,OAAA3D,MAAA,iBAAsCwD,UAAA,EAAeG,KAAA,WAAA1I,KAAA,CAA0B0I,KAAA,OAAA3D,MAAA,MAA2BA,MAAA,CAAU2D,KAAA,WAAA1I,KAAA,CAA0B0I,KAAA,OAAA3D,MAAA,SAA6B8D,WAAA,OAAqB,CAAEH,KAAA,sBAAAM,UAAA,QAAAhJ,KAAA,CAAyD0I,KAAA,OAAA3D,MAAA,WAAgCkE,oBAAA,EAAyBP,KAAA,qBAAAQ,SAAA,CAAwCR,KAAA,WAAA1I,KAAA,CAA0B0I,KAAA,OAAA3D,MAAA,OAA4B9E,KAAA,CAASyI,KAAA,cAAAzI,KAAA,CAA6ByI,KAAA,YAAA1I,KAAA,CAA2B0I,KAAA,OAAA3D,MAAA,YAAiC8D,WAAA,KAAiBA,WAAA,GAAAC,aAAA,CAAkCJ,KAAA,eAAAK,WAAA,EAAqCL,KAAA,QAAA1I,KAAA,CAAuB0I,KAAA,OAAA3D,MAAA,WAAgCwD,UAAA,EAAeG,KAAA,WAAA1I,KAAA,CAA0B0I,KAAA,OAAA3D,MAAA,MAA2BA,MAAA,CAAU2D,KAAA,WAAA1I,KAAA,CAA0B0I,KAAA,OAAA3D,MAAA,SAA6B8D,WAAA,GAAAC,aAAA,CAAkCJ,KAAA,eAAAK,WAAA,EAAqCL,KAAA,iBAAA1I,KAAA,CAAgC0I,KAAA,OAAA3D,MAAA,SAA8B8D,WAAA,UAAuB,CAAEH,KAAA,sBAAAM,UAAA,QAAAhJ,KAAA,CAAyD0I,KAAA,OAAA3D,MAAA,WAAgCkE,oBAAA,EAAyBP,KAAA,qBAAAQ,SAAA,CAAwCR,KAAA,WAAA1I,KAAA,CAA0B0I,KAAA,OAAA3D,MAAA,SAA8B9E,KAAA,CAASyI,KAAA,YAAA1I,KAAA,CAA2B0I,KAAA,OAAA3D,MAAA,cAAmC8D,WAAA,KAAiBA,WAAA,GAAAC,aAAA,CAAkCJ,KAAA,eAAAK,WAAA,EAAqCL,KAAA,QAAA1I,KAAA,CAAuB0I,KAAA,OAAA3D,MAAA,WAAgCwD,UAAA,EAAeG,KAAA,WAAA1I,KAAA,CAA0B0I,KAAA,OAAA3D,MAAA,QAA6BA,MAAA,CAAU2D,KAAA,WAAA1I,KAAA,CAA0B0I,KAAA,OAAA3D,MAAA,WAA+B8D,WAAA,GAAAC,aAAA,CAAkCJ,KAAA,eAAAK,WAAA,EAAqCL,KAAA,iBAAA1I,KAAA,CAAgC0I,KAAA,OAAA3D,MAAA,SAA8B8D,WAAA,IAAiB,CAAEH,KAAA,QAAA1I,KAAA,CAAuB0I,KAAA,OAAA3D,MAAA,QAA6BwD,UAAA,GAAAM,WAAA,GAAAC,aAAA,CAAgDJ,KAAA,eAAAK,WAAA,EAAqCL,KAAA,iBAAA1I,KAAA,CAAgC0I,KAAA,OAAA3D,MAAA,SAA8B8D,WAAA,cAA0BM,IAAA,CAASC,MAAA,EAAAC,IAAA,MAC/mIZ,EAAAU,IAAA/K,OAAA,CAAsBkL,KAAA,wpBAAupBtJ,KAAA,kBAAAuJ,eAAA,CAAqDC,KAAA,EAAAC,OAAA,IAGluB,IAAA4B,EAAA,GAeA5C,EAAAE,YAAAF,EAAAE,YAAAlF,OAAkD6H,EAAQ,KAAgB3C,YAb1E4C,OACA,SAAAT,GACA,0BAAAA,EAAApC,KAAA,SACA,IAAA1I,EAAA8K,EAAA9K,KAAA+E,MACA,OAAAsG,EAAArL,KAGAqL,EAAArL,IAAA,GACA,MAsCA,IAAA0J,EAAA,GAWA,SAAAC,EAAAlB,EAAAzI,GACA,QAAAzB,EAAA,EAAqBA,EAAAkK,EAAAE,YAAA/J,OAA4BL,IAAA,CACjD,IAAAqL,EAAAnB,EAAAE,YAAApK,GACA,GAAAqL,EAAA5J,MAAA4J,EAAA5J,KAAA+E,OAAA/E,EACA,OAAA4J,GAKA,SAAAC,EAAApB,EAAAqB,GAEA,IAAAC,EAAA,CACArB,KAAAD,EAAAC,KACAC,YAAA,CAAAgB,EAAAlB,EAAAqB,KAEArB,EAAAuB,eAAA,SACAD,EAAAZ,IAAAV,EAAAU,KAKA,IAAAc,EAAAP,EAAAI,IAAA,IAAAI,IACAC,EAAA,IAAAD,IACAE,EAAA,IAAAF,IAOA,IAJAD,EAAAI,QAAA,SAAAC,GACAF,EAAAG,IAAAD,KAGAF,EAAAI,KAAA,IACA,IAAAC,EAAAL,EACAA,EAAA,IAAAF,IAEAO,EAAAJ,QAAA,SAAAC,GACAH,EAAAO,IAAAJ,KACAH,EAAAI,IAAAD,IACAZ,EAAAY,IAAA,IAAAJ,KACAG,QAAA,SAAAM,GACAP,EAAAG,IAAAI,QAaA,OAPAR,EAAAE,QAAA,SAAAC,GACA,IAAAM,EAAAjB,EAAAlB,EAAA6B,GACAM,GACAb,EAAApB,YAAAkC,KAAAD,KAIAb,EA7DAtB,EAAAE,YAAA0B,QAAA,SAAAS,GACA,GAAAA,EAAA9K,KAAA,CACA,IAAA+K,EAAA,IAAAb,KAjCA,SAAAc,EAAAC,EAAAF,GACA,sBAAAE,EAAAvC,KACAqC,EAAAR,IAAAU,EAAAjL,KAAA+E,YACO,0BAAAkG,EAAAvC,KAAA,CACP,IAAAzI,EAAAgL,EAAAhL,KACA,cAAAA,EAAAyI,MACAqC,EAAAR,IAAAtK,EAAAD,KAAA+E,OAIAkG,EAAAnC,cACAmC,EAAAnC,aAAAC,WAAAsB,QAAA,SAAAa,GACAF,EAAAE,EAAAH,KAIAE,EAAAhC,qBACAgC,EAAAhC,oBAAAoB,QAAA,SAAAS,GACAE,EAAAF,EAAAC,KAIAE,EAAAtC,aACAsC,EAAAtC,YAAA0B,QAAA,SAAAS,GACAE,EAAAF,EAAAC,KAUAC,CAAAF,EAAAC,GACArB,EAAAoB,EAAA9K,KAAA+E,OAAAgG,KA4DAI,EAAAC,QAAA3C,EAEA0C,EAAAC,QAAA,WAAAvB,EAAApB,EAAA,cAEA0C,EAAAC,QAAA,cAAAvB,EAAApB,EAAA,iBAEA0C,EAAAC,QAAA,QAAAvB,EAAApB,EAAA,WAEA0C,EAAAC,QAAA,QAAAvB,EAAApB,EAAA","file":"static/js/5.9805a5a2.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","\r\nexport const omit = (obj, prop) => {\r\n  const {[prop]: omit, ...rest} = obj\r\n  return rest\r\n}\r\n","import React from 'react'\r\n\r\nimport { format } from 'date-fns'\r\nimport { BasicTable } from '@/component/BasicTable'\r\nimport { queryGraphql } from '@/component/ApolloQuery'\r\nimport { omit } from '@/common/utils'\r\nimport { allNote, updateNote, deleteOneNote} from '@/gql/note.graphql'\r\nimport { allBook } from '@/gql/book.graphql'\r\n\r\n\r\nexport const DictList = p => {\r\n  const [getAllBook, allBookList] = queryGraphql(allBook)\r\n  React.useEffect(() => {\r\n    getAllBook()\r\n  }, [])\r\n  const options = !allBookList.allBook ? [] : allBookList.allBook.map(e => ([e.id, e.name]))\r\n  const editType = [{\r\n    name: 'name'\r\n  }, {\r\n    name: 'title'\r\n  }, {\r\n    name: 'code'\r\n  }, {\r\n    name: 'type'\r\n  }, {\r\n    name: 'bookId',\r\n    type: 'Select',\r\n    options,\r\n  }, {\r\n    name: 'content',\r\n    multiline: true,\r\n    rows: 4,\r\n  }, {\r\n    name: 'message'\r\n  }]\r\n  const columns = [{\r\n    name: 'name'\r\n  }, {\r\n    name: 'title'\r\n  }, {\r\n    name: 'code'\r\n  }, {\r\n    name: 'type'\r\n  }, {\r\n    name: 'bookName',\r\n    path: 'book.name'\r\n  }, {\r\n    name: 'id'\r\n  }, {\r\n    name: 'message'\r\n  }, {\r\n    name: 'createDate',\r\n    formatData: data => format(new Date(data), 'yyyy/MM/dd HH:mm')\r\n  }]\r\n  const formColumn = [[\r\n      'title'\r\n  ]]\r\n  return BasicTable({\r\n    queryListGql: allNote,\r\n    deleteGql: deleteOneNote,\r\n    updateGql: updateNote,\r\n    dataListName: 'allNote',\r\n    editType,\r\n    columns,\r\n    dealEditData: data => omit(data, 'book'),\r\n    formColumn,\r\n  })(p);\r\n}\r\n\r\nexport default DictList\r\n","import React, { useState } from 'react'\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Dialog from \"@material-ui/core/Dialog\"\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\r\nimport DialogActions from \"@material-ui/core/DialogActions\"\r\nimport DialogContent from \"@material-ui/core/DialogContent\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport { mutationGraphql } from '@/component/ApolloQuery'\r\n\r\nexport const initState = () => {\r\n  const [showEdit, setShowEdit] = useState(false)\r\n  const [editData, setEditData] = useState({})\r\n  const editClick = (item) => () => {\r\n    setEditData(item)\r\n    setShowEdit(true)\r\n  }\r\n  return {\r\n    editClick,\r\n    showEdit, setEditData, editData, setShowEdit\r\n  }\r\n}\r\n\r\nexport const EditDialog = (\r\n    {\r\n      typeName = 'data',\r\n      updateSchema,\r\n      editType,\r\n      refetch,\r\n      showEdit, setEditData,\r\n      editData, setShowEdit,\r\n      dealEditData = data => data\r\n    }) => {\r\n  const setEdit = (data) => setEditData({ ...editData, ...data })\r\n  const [update, , loading] = mutationGraphql(updateSchema)\r\n\r\n  return (\r\n      <Dialog open={showEdit}\r\n              onClose={() => setShowEdit(false)}\r\n      >\r\n        <DialogTitle>EDIT</DialogTitle>\r\n        <DialogContent>\r\n          <form>\r\n            {\r\n              editType.map(item => {\r\n                const { name } = item\r\n                return (\r\n                    <FormControl fullWidth\r\n                                 key={`edit${name}`}>\r\n                      {\r\n                        getFormItem({\r\n                          ...item,\r\n                          editData,\r\n                          setEdit,\r\n                          setEditData,\r\n                        })\r\n                      }\r\n                    </FormControl>\r\n                );\r\n              })\r\n            }\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={async () => {\r\n            await update({\r\n              [typeName]: dealEditData(editData)\r\n            })\r\n            setShowEdit(false)\r\n            refetch()\r\n          }}\r\n          >{loading ? 'loading' : 'save'}</Button>\r\n          <Button onClick={() => setShowEdit(false)}\r\n          >cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n  )\r\n}\r\n\r\nconst getFormItem = (option) => {\r\n  const { name, type, editData, setEdit, options = [] } = option\r\n\r\n  if (type === 'Select') {\r\n    return <>\r\n      <InputLabel shrink={editData[name]}>{name}</InputLabel>\r\n      <Select\r\n          value={editData[name]}\r\n          onChange={e => setEdit({\r\n            [name]: e.target.value\r\n          })}\r\n      >\r\n        {\r\n          options.map(([value, text]) => <MenuItem key={value}\r\n                                                   value={value}>{text}</MenuItem>)\r\n        }\r\n      </Select>\r\n    </>\r\n  }\r\n  if (type === 'DatePicker') {\r\n    return <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <DatePicker\r\n          label={name}\r\n          value={editData[name]}\r\n          onChange={e => {\r\n            return setEdit({\r\n              [name]: e\r\n            })\r\n          }}\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  }\r\n  return <TextField\r\n      label={name}\r\n      value={editData[name] || ''}\r\n      multiline={option.multiline}\r\n      rows={option.rows}\r\n      onChange={e => setEdit({\r\n        [name]: e.target.value\r\n      })}\r\n  />\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Dialog from \"@material-ui/core/Dialog\"\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\r\nimport DialogActions from \"@material-ui/core/DialogActions\"\r\nimport DialogContent from \"@material-ui/core/DialogContent\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport { mutationGraphql } from '@/component/ApolloQuery'\r\n\r\nexport const initState = () => {\r\n  const [formData, setFormData] = useState({})\r\n  return {\r\n    setFormData, formData,\r\n  }\r\n}\r\n\r\nexport const SearchForm = (\r\n    {\r\n      setFormData,\r\n      formData,\r\n      formColumn,\r\n    }) => {\r\n  return (\r\n      <form>\r\n        {\r\n          formColumn.map(item => {\r\n            const [name] = item\r\n            return (\r\n                <FormControl key={`SearchForm${name}`}>\r\n                  {\r\n                    getFormItem({\r\n                      ...item,\r\n                      formData,\r\n                      setFormData,\r\n                    })\r\n                  }\r\n                </FormControl>\r\n            );\r\n          })\r\n        }\r\n      </form>\r\n  )\r\n}\r\n\r\nconst getFormItem = (option) => {\r\n  const { name, type, formData, setEdit, options = [] } = option\r\n\r\n  if (type === 'Select') {\r\n    return <>\r\n      <InputLabel shrink={formData[name]}>{name}</InputLabel>\r\n      <Select\r\n          value={formData[name]}\r\n          onChange={e => setEdit({\r\n            [name]: e.target.value\r\n          })}\r\n      >\r\n        {\r\n          options.map(([value, text]) => <MenuItem key={value}\r\n                                                   value={value}>{text}</MenuItem>)\r\n        }\r\n      </Select>\r\n    </>\r\n  }\r\n  if (type === 'DatePicker') {\r\n    return <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <DatePicker\r\n          label={name}\r\n          value={formData[name]}\r\n          onChange={e => {\r\n            return setEdit({\r\n              [name]: e\r\n            })\r\n          }}\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  }\r\n  return <TextField\r\n      label={name}\r\n      value={formData[name] || ''}\r\n      multiline={option.multiline}\r\n      rows={option.rows}\r\n      onChange={e => setEdit({\r\n        [name]: e.target.value\r\n      })}\r\n  />\r\n\r\n}\r\n","import styled from 'styled-components'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nexport const S = {}\r\n\r\nS.TableSection = styled(Paper)`\r\n  padding: 10px;\r\n`\r\n","import React, { useEffect } from 'react'\r\nimport get from 'lodash/get'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport { queryGraphql, mutationGraphql } from '@/component/ApolloQuery'\r\nimport Button from \"@material-ui/core/es/Button/Button\"\r\nimport { useCustomContext } from '@/common/context'\r\nimport { EditDialog, initState } from '@/component/EditDialog'\r\nimport { SearchForm, initState as initSearchFormState } from '@/component/SearchForm'\r\nimport { S } from './style'\r\n\r\nexport const BasicTable = (option) => p => {\r\n  const [con] = useCustomContext()\r\n  const [getData, { [option.dataListName]: dataList = [] }] = queryGraphql(option.queryListGql)\r\n  const [deleteOne] = mutationGraphql(option.deleteGql)\r\n  const searchFormState = initSearchFormState()\r\n  useEffect(() => {\r\n    getData(searchFormState.formData)\r\n  }, [])\r\n  const editDialogState = initState()\r\n  const { editClick } = editDialogState\r\n  const editType = option.editType\r\n  const columns = option.columns\r\n  return <>\r\n    <S.TableSection>\r\n      <header>\r\n        <Button variant=\"outlined\"\r\n                onClick={editClick({})}\r\n        >add</Button>\r\n        {\r\n          option.formColumn && <SearchForm\r\n              formColumn={option.formColumn}\r\n              {...searchFormState} />\r\n        }\r\n      </header>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {\r\n              columns.map(({ name }) => <TableCell key={`tableHead${name}`}>{name}</TableCell>)\r\n            }\r\n            <TableCell>action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {\r\n            dataList.map((item) => (\r\n                <TableRow key={item.id}>\r\n                  {\r\n                    columns.map(({ name, path, formatData = data => data }) =>\r\n                        <TableCell key={`tableBody${name}`}>{formatData(get(item, (path ? path : name)))}</TableCell>)\r\n                  }\r\n                  <TableCell>\r\n                    <Button variant=\"outlined\"\r\n                            onClick={editClick(item)}\r\n                    >edit</Button>\r\n                    <Button variant=\"outlined\"\r\n                            onClick={() => {\r\n                              con.showConfirm({\r\n                                message: 'Are you sure',\r\n                                callBack: async res => {\r\n                                  if (!res) return\r\n                                  await deleteOne({\r\n                                    id: item.id\r\n                                  })\r\n                                  getData()\r\n                                }\r\n                              });\r\n                            }}\r\n                    >del</Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n            ))\r\n          }\r\n        </TableBody>\r\n      </Table>\r\n    </S.TableSection>\r\n    <EditDialog refetch={getData}\r\n                editType={editType}\r\n                updateSchema={option.updateGql}\r\n                dealEditData={option.dealEditData}\r\n                {...editDialogState}\r\n    />\r\n  </>\r\n}\r\n\r\nexport default BasicTable\r\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"bookF\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Book\"}},\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"modifyDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"message\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"updateBook\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"BookInput\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"updateBook\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"bookF\"},\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"deleteOneBook\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"deleteOneBook\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[]}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"oneBook\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"oneBook\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"bookF\"},\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"allBook\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"allBook\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"bookF\"},\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":418}};\n    doc.loc.source = {\"body\":\"\\r\\nfragment bookF on Book {\\r\\n    id\\r\\n    name\\r\\n    createDate\\r\\n    modifyDate\\r\\n    message\\r\\n}\\r\\n\\r\\nmutation updateBook($data: BookInput!){\\r\\n    updateBook(data: $data) {\\r\\n        ... bookF\\r\\n    }\\r\\n}\\r\\n\\r\\nmutation deleteOneBook($id: String!){\\r\\n    deleteOneBook(id: $id)\\r\\n}\\r\\n\\r\\nquery oneBook($id: String!){\\r\\n    oneBook(id: $id) {\\r\\n        ... bookF\\r\\n    }\\r\\n}\\r\\n\\r\\nquery allBook{\\r\\n    allBook {\\r\\n        ... bookF\\r\\n    }\\r\\n}\\r\\n\\r\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \r\n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \r\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"updateBook\"] = oneQuery(doc, \"updateBook\");\n        \n        module.exports[\"deleteOneBook\"] = oneQuery(doc, \"deleteOneBook\");\n        \n        module.exports[\"oneBook\"] = oneQuery(doc, \"oneBook\");\n        \n        module.exports[\"allBook\"] = oneQuery(doc, \"allBook\");\n        \r\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"noteF\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Note\"}},\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"title\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"code\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"content\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"modifyDate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"message\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"bookId\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"updateNote\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"NoteInput\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"updateNote\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"noteF\"},\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"deleteOneNote\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"deleteOneNote\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[]}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"oneNote\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"oneNote\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"noteF\"},\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"allNote\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"NoteInput\"}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"allNote\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"noteF\"},\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"book\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"bookF\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":581}};\n    doc.loc.source = {\"body\":\"#import \\\"./book.graphql\\\"\\r\\n\\r\\nfragment noteF on Note {\\r\\n    id\\r\\n    name\\r\\n    title\\r\\n    code\\r\\n    type\\r\\n    content\\r\\n    createDate\\r\\n    modifyDate\\r\\n    message\\r\\n    bookId\\r\\n}\\r\\n\\r\\nmutation updateNote($data: NoteInput!){\\r\\n    updateNote(data: $data) {\\r\\n        ... noteF\\r\\n    }\\r\\n}\\r\\n\\r\\nmutation deleteOneNote($id: String!){\\r\\n    deleteOneNote(id: $id)\\r\\n}\\r\\n\\r\\nquery oneNote($id: String!){\\r\\n    oneNote(id: $id) {\\r\\n        ... noteF\\r\\n    }\\r\\n}\\r\\n\\r\\nquery allNote($data: NoteInput){\\r\\n    allNote(data: $data) {\\r\\n        ... noteF\\r\\n        book {\\r\\n            ... bookF\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \r\n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require(\"./book.graphql\").definitions));\r\n\r\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"updateNote\"] = oneQuery(doc, \"updateNote\");\n        \n        module.exports[\"deleteOneNote\"] = oneQuery(doc, \"deleteOneNote\");\n        \n        module.exports[\"oneNote\"] = oneQuery(doc, \"oneNote\");\n        \n        module.exports[\"allNote\"] = oneQuery(doc, \"allNote\");\n        \r\n"],"sourceRoot":""}