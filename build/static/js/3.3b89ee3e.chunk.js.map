{"version":3,"sources":["views/User/List/index.js"],"names":["useState","React","TableSection","styled","Paper","_templateObject","UserList","p","_useCustomContext","useCustomContext","showMessage","Object","E_ss_code_react_hooks_demo_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_4__","_useState","_useState2","showEdit","setShowEdit","_useState3","_useState4","editData","setEditData","editClick","item","editType","columns","name","WrapperQuery","allUser","data","refetch","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_material_ui_core_es_Button_Button__WEBPACK_IMPORTED_MODULE_16__","variant","onClick","_material_ui_core_Table__WEBPACK_IMPORTED_MODULE_9___default","_material_ui_core_TableHead__WEBPACK_IMPORTED_MODULE_12___default","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_13___default","map","_ref2","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_11___default","key","concat","_material_ui_core_TableBody__WEBPACK_IMPORTED_MODULE_10___default","user","id","_ref3","E_ss_code_react_hooks_demo_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","E_ss_code_react_hooks_demo_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","mark","_callee","wrap","_context","prev","next","message","stop","this","_material_ui_core_es_Dialog_Dialog__WEBPACK_IMPORTED_MODULE_17__","open","onClose","_material_ui_core_es_DialogTitle_DialogTitle__WEBPACK_IMPORTED_MODULE_18__","_material_ui_core_es_DialogContent_DialogContent__WEBPACK_IMPORTED_MODULE_20__","_material_ui_core_es_TextField_TextField__WEBPACK_IMPORTED_MODULE_21__","label","fullWidth","value","onChange","e","E_ss_code_react_hooks_demo_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","E_ss_code_react_hooks_demo_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_es_DialogActions_DialogActions__WEBPACK_IMPORTED_MODULE_19__","react_apollo__WEBPACK_IMPORTED_MODULE_8__","mutation","updateUser","onCompleted","_ref4","loading","variables"],"mappings":"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","file":"static/js/3.3b89ee3e.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Mutation } from 'react-apollo'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { WrapperQuery } from '@/component/ApolloQuery'\r\nimport Button from \"@material-ui/core/es/Button/Button\";\r\nimport Dialog from \"@material-ui/core/es/Dialog/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/es/DialogTitle/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/es/DialogActions/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/es/DialogContent/DialogContent\";\r\nimport TextField from \"@material-ui/core/es/TextField/TextField\";\r\nimport { updateUser, allUser } from '@/gql/user.graphql'\r\nimport { useCustomContext } from '@/common/context'\r\n\r\nconst { useState } = React\r\n\r\nconst TableSection = styled(Paper)`\r\n  //margin: 10px;\r\n`\r\n\r\nexport const UserList = p => {\r\n  const [{ showMessage }] = useCustomContext()\r\n  const [showEdit, setShowEdit] = useState(false)\r\n  const [editData, setEditData] = useState({})\r\n  const setEdit = (data) => setEditData({ ...editData, ...data })\r\n  const editClick = (item) => () => {\r\n    setEditData(item)\r\n    setShowEdit(true)\r\n  }\r\n  const test = (item) => async () => {\r\n    // console.log(item)\r\n    showMessage({ message: '请重新登录' })\r\n    // const res = await client.query({\r\n    //   query: oneUser,\r\n    //   variables: {\r\n    //     id: item.id\r\n    //   }\r\n    // })\r\n    // console.log(res)\r\n  }\r\n  const editType = ['name', 'auth', 'message']\r\n  const columns = [{\r\n    name: 'name'\r\n  }, {\r\n    name: 'auth'\r\n  }, {\r\n    name: 'id'\r\n  }, {\r\n    name: 'message'\r\n  }]\r\n  return WrapperQuery(allUser)((data, refetch) => <div>\r\n    <TableSection>\r\n      <header>\r\n        <Button variant=\"outlined\"\r\n                onClick={editClick({})}\r\n        >add</Button>\r\n      </header>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {\r\n              columns.map(({ name }) => <TableCell key={`tableHead${name}`}>{name}</TableCell>)\r\n            }\r\n            <TableCell>action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {\r\n            data.user.map((item) => (\r\n                <TableRow key={item.id}>\r\n                  {\r\n                    columns.map(({ name }) => <TableCell key={`tableBody${name}`}>{item[name]}</TableCell>)\r\n                  }\r\n                  <TableCell>\r\n                    <Button variant=\"outlined\"\r\n                            onClick={editClick(item)}\r\n                    >edit</Button>\r\n                    <Button variant=\"outlined\"\r\n                            onClick={test(item)}\r\n                    >test</Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n            ))\r\n          }\r\n        </TableBody>\r\n      </Table>\r\n    </TableSection>\r\n    <Dialog open={showEdit}\r\n            onClose={() => setShowEdit(false)}\r\n    >\r\n      <DialogTitle>EDIT</DialogTitle>\r\n      <DialogContent>\r\n        {\r\n          editType.map(name => (\r\n              <TextField key={`edit${name}`}\r\n                         label={name}\r\n                         fullWidth\r\n                         value={editData[name] || ''}\r\n                         onChange={e => setEdit({\r\n                           [name]: e.target.value\r\n                         })}\r\n              />\r\n          ))\r\n        }\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Mutation mutation={updateUser}\r\n                  onCompleted={() => {\r\n                    setShowEdit(false)\r\n                    refetch()\r\n                  }}\r\n        >\r\n          {(updateUser, { loading }) => (\r\n              <Button onClick={() => {\r\n                updateUser({\r\n                  variables: {\r\n                    user: editData\r\n                  }\r\n                })\r\n              }}\r\n              >{loading ? 'loading' : 'save'}</Button>\r\n          )}\r\n        </Mutation>\r\n        <Button onClick={() => setShowEdit(false)}\r\n        >cancel</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  </div>)\r\n}\r\n\r\nexport default UserList\r\n"],"sourceRoot":""}