(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{342:function(e,n,a){"use strict";a.r(n);var i=a(6),t=a(35),r=a.n(t),c=a(45),l=a(46),d=a(25),o=a(0),u=a.n(o),m=a(66),s=a(353),v=a.n(s),k=a(358),f=a.n(k),p=a(357),D=a.n(p),S=a(355),b=a.n(S),E=a(356),N=a.n(E),g=a(120),y=a(352),F=a(359),h=a(368),w=a(366),O=a(365),j=a(367),C=a(372),T=a(39),V=a(72),x=a(73),q=a(85),$=a.n(q);function I(){var e=Object(V.a)(["\n  padding: 10px;\n"]);return I=function(){return e},e}var A={};A.TableSection=Object(x.a)($.a)(I()),a.d(n,"UserList",function(){return L});var J=u.a.useState,L=function(e){var n=Object(T.a)(),a=Object(d.a)(n,1)[0].showMessage,t=J(!1),o=Object(d.a)(t,2),s=o[0],k=o[1],p=J({}),S=Object(d.a)(p,2),E=S[0],V=S[1],x=function(e){return function(){V(e),k(!0)}},q=["name","code","type","message"],$=[{name:"name"},{name:"code"},{name:"type"},{name:"id"},{name:"message"}];return Object(g.a)(C.allDict)(function(e,n){return u.a.createElement(u.a.Fragment,null,u.a.createElement(A.TableSection,null,u.a.createElement("header",null,u.a.createElement(y.a,{variant:"outlined",onClick:x({})},"add")),u.a.createElement(v.a,null,u.a.createElement(b.a,null,u.a.createElement(N.a,null,$.map(function(e){var n=e.name;return u.a.createElement(D.a,{key:"tableHead".concat(n)},n)}),u.a.createElement(D.a,null,"action"))),u.a.createElement(f.a,null,e.allDict.map(function(e){return u.a.createElement(N.a,{key:e.id},$.map(function(n){var a=n.name;return u.a.createElement(D.a,{key:"tableBody".concat(a)},e[a])}),u.a.createElement(D.a,null,u.a.createElement(y.a,{variant:"outlined",onClick:x(e)},"edit"),u.a.createElement(y.a,{variant:"outlined",onClick:Object(c.a)(r.a.mark(function e(){return r.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:a({message:"\u8bf7\u91cd\u65b0\u767b\u5f55"});case 1:case"end":return e.stop()}},e,this)}))},"test")))})))),u.a.createElement(F.a,{open:s,onClose:function(){return k(!1)}},u.a.createElement(h.a,null,"EDIT"),u.a.createElement(O.a,null,q.map(function(e){return u.a.createElement(j.a,{key:"edit".concat(e),label:e,fullWidth:!0,value:E[e]||"",onChange:function(n){return a=Object(i.a)({},e,n.target.value),V(Object(l.a)({},E,a));var a}})})),u.a.createElement(w.a,null,u.a.createElement(m.Mutation,{mutation:C.updateDict,onCompleted:function(){k(!1),n()}},function(e,n){var a=n.loading;return u.a.createElement(y.a,{onClick:function(){e({variables:{dict:E}})}},a?"loading":"save")}),u.a.createElement(y.a,{onClick:function(){return k(!1)}},"cancel"))))})};n.default=L},372:function(e,n){var a={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"dictF"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Dict"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"message"},arguments:[],directives:[]}]}},{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"updateDict"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"dict"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"DictInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"updateDict"},arguments:[{kind:"Argument",name:{kind:"Name",value:"dict"},value:{kind:"Variable",name:{kind:"Name",value:"dict"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"dictF"},directives:[]}]}}]}},{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"oneDict"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"oneDict"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"dictF"},directives:[]}]}}]}},{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"allDict"},variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"allDict"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"dictF"},directives:[]}]}}]}}],loc:{start:0,end:332}};a.loc.source={body:"fragment dictF on Dict {\r\n    id\r\n    name\r\n    code\r\n    type\r\n    message\r\n}\r\n\r\nmutation updateDict($dict: DictInput!){\r\n    updateDict(dict: $dict) {\r\n        ... dictF\r\n    }\r\n}\r\n\r\nquery oneDict($id: String!){\r\n    oneDict(id: $id) {\r\n        ... dictF\r\n    }\r\n}\r\n\r\nquery allDict{\r\n    allDict {\r\n        ... dictF\r\n    }\r\n}\r\n\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var i={};function t(e,n){for(var a=0;a<e.definitions.length;a++){var i=e.definitions[a];if(i.name&&i.name.value==n)return i}}function r(e,n){var a={kind:e.kind,definitions:[t(e,n)]};e.hasOwnProperty("loc")&&(a.loc=e.loc);var r=i[n]||new Set,c=new Set,l=new Set;for(r.forEach(function(e){l.add(e)});l.size>0;){var d=l;l=new Set,d.forEach(function(e){c.has(e)||(c.add(e),(i[e]||new Set).forEach(function(e){l.add(e)}))})}return c.forEach(function(n){var i=t(e,n);i&&a.definitions.push(i)}),a}a.definitions.forEach(function(e){if(e.name){var n=new Set;!function e(n,a){if("FragmentSpread"===n.kind)a.add(n.name.value);else if("VariableDefinition"===n.kind){var i=n.type;"NamedType"===i.kind&&a.add(i.name.value)}n.selectionSet&&n.selectionSet.selections.forEach(function(n){e(n,a)}),n.variableDefinitions&&n.variableDefinitions.forEach(function(n){e(n,a)}),n.definitions&&n.definitions.forEach(function(n){e(n,a)})}(e,n),i[e.name.value]=n}}),e.exports=a,e.exports.updateDict=r(a,"updateDict"),e.exports.oneDict=r(a,"oneDict"),e.exports.allDict=r(a,"allDict")}}]);
//# sourceMappingURL=2.f2f22610.chunk.js.map