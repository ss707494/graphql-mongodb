{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","common/utils.js","views/Note/List/index.js","component/Form/index.js","component/EditDialog/index.js","component/SearchForm/index.js","component/Pagination/index.js","component/BasicTable/style.js","component/BasicTable/index.js"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","DictList","p","_queryGraphql","queryGraphql","allBook","_queryGraphql2","slicedToArray","getAllBook","allBookList","React","useEffect","options","map","e","id","name","editType","type","multiline","rows","columns","sort","path","formatData","data","format","Date","formColumn","BasicTable","queryListGql","allNote","deleteGql","deleteOneNote","updateGql","updateNote","dataListName","dealEditData","obj","prop","_toPropertyKey","omit","getFormItem","option","editData","setEditData","_option$options","setEdit","objectSpread","react_default","a","createElement","Fragment","InputLabel_default","shrink","Select_default","value","onChange","defineProperty","_ref","_ref2","text","MenuItem_default","material_ui_pickers_esm","utils","DateFnsUtils","label","TextField_default","EditDialog","_ref$typeName","typeName","updateSchema","refetch","showEdit","setShowEdit","_ref$dealEditData","_mutationGraphql","mutationGraphql","_mutationGraphql2","update","loading","Dialog_default","open","onClose","DialogTitle_default","DialogContent_default","item","FormControl_default","fullWidth","concat","DialogActions_default","Button_default","onClick","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","this","S","FormControl","styled","_templateObject","SearchForm","setFormData","formData","_ref$onSubmit","onSubmit","preventDefault","_item","Pagination","pageData","setPageData","count","_ref$refresh","refresh","index_es","component","rowsPerPageOptions","rowsPerPage","page","onChangePage","onChangeRowsPerPage","TableSection","Paper","style_templateObject","Header","_templateObject2","Loading","_templateObject3","_useCustomContext","useCustomContext","con","getData","_queryGraphql2$","_queryGraphql2$$optio","dataList","_queryGraphql2$$total","total","listDataLoading","deleteOne","searchFormState","_useState","useState","_useState2","initSearchFormState","pageState","initPageData","_React$useState","_React$useState2","sortData","setSortData","getListData","param","arguments","undefined","editDialogState","_useState3","_useState4","editClick","initState","handleSearch","style_S","Button","variant","SearchForm_SearchForm","assign","Table_default","TableHead_default","TableRow_default","TableCell_default","Tooltip_default","title","active","direction","sortDataTpl","TableBody_default","_ref2$formatData","get","showConfirm","message","callBack","_callBack","res","abrupt","_x","apply","handleClick","Pagination_Pagination","EditDialog_EditDialog"],"mappings":"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","file":"static/js/8.9707b5ce.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","\r\nexport const omit = (obj, prop) => {\r\n  const {[prop]: omit, ...rest} = obj\r\n  return rest\r\n}\r\n","import React from 'react'\r\n\r\nimport { format } from 'date-fns'\r\nimport { BasicTable } from '@/component/BasicTable'\r\nimport { queryGraphql } from '@/component/ApolloQuery'\r\nimport { omit } from '@/common/utils'\r\nimport { allNote, updateNote, deleteOneNote, } from '@/gql/note.graphql'\r\nimport { allBook } from '@/gql/book.graphql'\r\n\r\n\r\nexport const DictList = p => {\r\n  const [getAllBook, allBookList] = queryGraphql(allBook)\r\n  React.useEffect(() => {\r\n    getAllBook()\r\n  }, [])\r\n  const options = !allBookList.allBook ? [] : allBookList.allBook.map(e => ([e.id, e.name]))\r\n  const editType = [{\r\n    name: 'name'\r\n  }, {\r\n    name: 'title'\r\n  }, {\r\n    name: 'code',\r\n  }, {\r\n    name: 'type'\r\n  }, {\r\n    name: 'bookId',\r\n    type: 'Select',\r\n    options,\r\n  }, {\r\n    name: 'content',\r\n    multiline: true,\r\n    rows: 4,\r\n  }, {\r\n    name: 'message'\r\n  }]\r\n  const columns = [{\r\n    name: 'name'\r\n  }, {\r\n    name: 'title'\r\n  }, {\r\n    name: 'code',\r\n    sort: true,\r\n  }, {\r\n    name: 'type'\r\n  }, {\r\n    name: 'bookName',\r\n    path: 'book.name'\r\n  }, {\r\n    name: 'id'\r\n  }, {\r\n    name: 'message'\r\n  }, {\r\n    name: 'createDate',\r\n    formatData: data => format(new Date(data), 'yyyy/MM/dd HH:mm')\r\n  }]\r\n  const formColumn = [[\r\n      'title'\r\n  ], [\r\n      'bookId', 'Select', options\r\n  ]]\r\n  return BasicTable({\r\n    queryListGql: allNote,\r\n    deleteGql: deleteOneNote,\r\n    updateGql: updateNote,\r\n    dataListName: 'allNote',\r\n    editType,\r\n    columns,\r\n    dealEditData: data => omit(data, 'book'),\r\n    formColumn,\r\n  })(p);\r\n}\r\n\r\nexport default DictList\r\n","import React from 'react'\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\n\r\nexport const getFormItem = (option) => {\r\n  const { name, type, editData, setEditData, options = [] } = option\r\n  const setEdit = (data) => setEditData({ ...editData, ...data })\r\n\r\n  if (type === 'Select') {\r\n    return <>\r\n      <InputLabel shrink={!!editData[name]}>{name}</InputLabel>\r\n      <Select\r\n          value={editData[name] || ''}\r\n          onChange={e => setEdit({\r\n            [name]: e.target.value\r\n          })}\r\n      >\r\n        {\r\n          options.map(([value, text]) => <MenuItem key={value}\r\n                                                   value={value}>{text}</MenuItem>)\r\n        }\r\n      </Select>\r\n    </>\r\n  }\r\n  if (type === 'DatePicker') {\r\n    return <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <DatePicker\r\n          label={name}\r\n          value={editData[name]}\r\n          onChange={e => {\r\n            return setEdit({\r\n              [name]: e\r\n            })\r\n          }}\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  }\r\n  return <TextField\r\n      label={name}\r\n      value={editData[name] || ''}\r\n      multiline={option.multiline}\r\n      rows={option.rows}\r\n      onChange={e => setEdit({\r\n        [name]: e.target.value\r\n      })}\r\n  />\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Dialog from \"@material-ui/core/Dialog\"\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\r\nimport DialogActions from \"@material-ui/core/DialogActions\"\r\nimport DialogContent from \"@material-ui/core/DialogContent\"\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport { mutationGraphql } from '@/component/ApolloQuery'\r\nimport { getFormItem } from '@/component/Form'\r\n\r\nexport const initState = () => {\r\n  const [showEdit, setShowEdit] = useState(false)\r\n  const [editData, setEditData] = useState({})\r\n  const editClick = (item) => () => {\r\n    setEditData(item)\r\n    setShowEdit(true)\r\n  }\r\n  return {\r\n    editClick,\r\n    showEdit, setEditData, editData, setShowEdit\r\n  }\r\n}\r\n\r\nexport const EditDialog = (\r\n    {\r\n      typeName = 'data',\r\n      updateSchema,\r\n      editType,\r\n      refetch,\r\n      showEdit, setEditData,\r\n      editData, setShowEdit,\r\n      dealEditData = data => data\r\n    }) => {\r\n  const [update, , loading] = mutationGraphql(updateSchema)\r\n\r\n  return (\r\n      <Dialog open={showEdit}\r\n              onClose={() => setShowEdit(false)}\r\n      >\r\n        <DialogTitle>EDIT</DialogTitle>\r\n        <DialogContent>\r\n          <form>\r\n            {\r\n              editType.map(item => {\r\n                const { name } = item\r\n                return (\r\n                    <FormControl fullWidth\r\n                                 key={`edit${name}`}>\r\n                      {\r\n                        getFormItem({\r\n                          ...item,\r\n                          editData,\r\n                          setEditData,\r\n                        })\r\n                      }\r\n                    </FormControl>\r\n                );\r\n              })\r\n            }\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={async () => {\r\n            await update({\r\n              [typeName]: dealEditData(editData)\r\n            })\r\n            setShowEdit(false)\r\n            refetch()\r\n          }}\r\n          >{loading ? 'loading' : 'save'}</Button>\r\n          <Button onClick={() => setShowEdit(false)}\r\n          >cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n  )\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport { getFormItem } from '@/component/Form'\r\n\r\nconst S = {\r\n  FormControl: styled(FormControl)`\r\n    &&& {\r\n      min-width: 120px;\r\n      margin-left: 20px;\r\n    }\r\n`\r\n}\r\n\r\nexport const initState = () => {\r\n  const [formData, setFormData] = useState({})\r\n  return {\r\n    setFormData, formData,\r\n  }\r\n}\r\n\r\nexport const SearchForm = (\r\n    {\r\n      setFormData,\r\n      formData,\r\n      formColumn,\r\n      onSubmit= () => {},\r\n    }) => {\r\n  return (\r\n      <form onSubmit={e => {\r\n        e.preventDefault()\r\n        onSubmit()\r\n      }}>\r\n        {\r\n          formColumn.map(item => {\r\n            const [name, type, options] = item\r\n            return (\r\n                <S.FormControl key={`SearchForm${name}`}>\r\n                  {\r\n                    getFormItem({\r\n                      name,\r\n                      type,\r\n                      options,\r\n                      editData: formData,\r\n                      setEditData: setFormData,\r\n                    })\r\n                  }\r\n                </S.FormControl>\r\n            );\r\n          })\r\n        }\r\n      </form>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { TablePagination } from '@material-ui/core'\r\n\r\nexport const initState = () => {\r\n  const [pageData, setPageData] = useState({\r\n    page: 0,\r\n    rowsPerPage: 10,\r\n  })\r\n  return {\r\n    pageData,\r\n    setPageData: data => setPageData({\r\n      ...pageData,\r\n      ...data\r\n    }),\r\n  }\r\n}\r\n\r\nexport const Pagination = (\r\n    {\r\n      pageData,\r\n      setPageData,\r\n      count,\r\n      refresh = () => {\r\n      },\r\n    }) => {\r\n\r\n  return (\r\n      <TablePagination\r\n          component=\"div\"\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          count={count}\r\n          rowsPerPage={pageData.rowsPerPage || 10}\r\n          page={pageData.page || 0}\r\n          onChangePage={(e, page) => {\r\n            setPageData({\r\n              page,\r\n            })\r\n            refresh({ page })\r\n          }}\r\n          onChangeRowsPerPage={e => {\r\n            setPageData({\r\n              rowsPerPage: e.target.value\r\n            })\r\n            refresh({\r\n              rowsPerPage: e.target.value\r\n            })\r\n          }}\r\n      />\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nexport const S = {}\r\n\r\nS.TableSection = styled(Paper)`\r\n  padding: 10px;\r\n`\r\n\r\nS.Header = styled('header')`\r\n  display: flex;\r\n`\r\n\r\nS.Loading = styled('section')`\r\n  text-align: center;\r\n`\r\n","import React, { useEffect } from 'react'\r\nimport get from 'lodash/get'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport { queryGraphql, mutationGraphql } from '@/component/ApolloQuery'\r\nimport Button from \"@material-ui/core/es/Button/Button\"\r\nimport { useCustomContext } from '@/common/context'\r\nimport { EditDialog, initState } from '@/component/EditDialog'\r\nimport { SearchForm, initState as initSearchFormState } from '@/component/SearchForm'\r\nimport { Pagination, initState as initPageData } from '@/component/Pagination'\r\nimport { S } from './style'\r\nimport { CircularProgress, TableSortLabel } from \"@material-ui/core\";\r\n\r\nexport const BasicTable = (option) => p => {\r\n  const [con] = useCustomContext()\r\n  const [getData, { [option.dataListName]: dataList = [], total = 0 }, listDataLoading] = queryGraphql(option.queryListGql)\r\n  // const [getAllData] = queryGraphql(option.allDataGql)\r\n  const [deleteOne] = mutationGraphql(option.deleteGql)\r\n  const searchFormState = initSearchFormState()\r\n  const pageState = initPageData()\r\n  const [sortData, setSortData] = React.useState({})\r\n  const getListData = (param = {}) => getData({\r\n    data: {\r\n      ...searchFormState.formData,\r\n      sortData,\r\n      ...pageState.pageData,\r\n      ...param,\r\n    },\r\n  })\r\n  useEffect(() => {\r\n    getListData()\r\n  }, [])\r\n  const editDialogState = initState()\r\n  const { editClick } = editDialogState\r\n  const editType = option.editType\r\n  const columns = option.columns\r\n  const handleSearch = param => {\r\n    pageState.setPageData({\r\n      page: 0,\r\n    })\r\n    getListData({\r\n      page: 0,\r\n      ...param,\r\n    })\r\n  }\r\n  return <>\r\n    <S.TableSection>\r\n      <S.Header>\r\n        <Button variant=\"outlined\"\r\n                onClick={editClick({})}\r\n        >add</Button>\r\n        {/*<Button variant=\"outlined\"*/}\r\n        {/*        onClick={() => getAllData()}*/}\r\n        {/*>export</Button>*/}\r\n        {/*<Button variant=\"outlined\"*/}\r\n        {/*        onClick={() => getAllData()}*/}\r\n        {/*>import</Button>*/}\r\n        {\r\n          option.formColumn && <>\r\n            <SearchForm\r\n                formColumn={option.formColumn}\r\n                onSubmit={() => handleSearch()}\r\n                {...searchFormState} />\r\n            <Button onClick={() => handleSearch()}>search</Button>\r\n          </>\r\n        }\r\n      </S.Header>\r\n      {(listDataLoading) ? <S.Loading><CircularProgress/></S.Loading>\r\n          : <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                {\r\n                  columns.map(({ name, sort }) => <TableCell\r\n                      key={`tableHead${name}`}\r\n                  >\r\n                    {!sort ? (name)\r\n                        : (\r\n                            <Tooltip\r\n                                title=\"sort\"\r\n                            >\r\n                              <TableSortLabel\r\n                                  active={true}\r\n                                  direction={sortData[name] === -1 ? 'desc' : 'asc'}\r\n                                  onClick={() => {\r\n                                    const sortDataTpl = {\r\n                                      ...sortData,\r\n                                      [name]: -(sortData[name] || 1)\r\n                                    }\r\n                                    setSortData(sortDataTpl)\r\n                                    handleSearch({\r\n                                      sortData: sortDataTpl\r\n                                    })\r\n                                  }}\r\n                              >\r\n                                {name}\r\n                              </TableSortLabel>\r\n                            </Tooltip>\r\n                        )\r\n                    }\r\n                  </TableCell>)\r\n                }\r\n                <TableCell>action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {\r\n                dataList.map((item) => (\r\n                    <TableRow key={item.id}>\r\n                      {\r\n                        columns.map(({ name, path, formatData = data => data }) =>\r\n                            <TableCell key={`tableBody${name}`}>{formatData(get(item, (path ? path : name)))}</TableCell>)\r\n                      }\r\n                      <TableCell>\r\n                        <Button variant=\"outlined\"\r\n                                onClick={editClick(item)}\r\n                        >edit</Button>\r\n                        <Button variant=\"outlined\"\r\n                                onClick={() => {\r\n                                  con.showConfirm({\r\n                                    message: 'Are you sure',\r\n                                    callBack: async res => {\r\n                                      if (!res) return\r\n                                      await deleteOne({\r\n                                        id: item.id\r\n                                      })\r\n                                      getListData()\r\n                                    }\r\n                                  });\r\n                                }}\r\n                        >del</Button>\r\n                        {\r\n                          get(option, 'btns', []).map(e => (\r\n                              <Button\r\n                                  key={`btns${e.name}`}\r\n                                  variant=\"outlined\"\r\n                                  onClick={() => e.handleClick(item, p)}\r\n                              >{e.name}</Button>\r\n                          ))\r\n                        }\r\n                      </TableCell>\r\n                    </TableRow>\r\n                ))\r\n              }\r\n            </TableBody>\r\n          </Table>\r\n      }\r\n      <Pagination\r\n          {...pageState}\r\n          count={~~total}\r\n          refresh={getListData}\r\n      />\r\n    </S.TableSection>\r\n    <EditDialog refetch={getListData}\r\n                editType={editType}\r\n                updateSchema={option.updateGql}\r\n                dealEditData={option.dealEditData}\r\n                {...editDialogState}\r\n    />\r\n  </>\r\n}\r\n\r\nexport default BasicTable\r\n"],"sourceRoot":""}